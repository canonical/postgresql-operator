[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:394 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:397 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 456, 'testing.postgresql-1': 456, 'testing.postgresql-2': 456}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 456, 'testing.postgresql-1': 456, 'testing.postgresql-2': 456}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 794, 'testing.postgresql-1': 795, 'testing.postgresql-2': 795}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:400 reestablishing the relation
[33mWARNING [0m juju.model:__init__.py:1683 relate is deprecated and will be removed. Use integrate instead.
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: 
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: Primary
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: 
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [idle] active: 
  postgresql/2 [executing] active: Primary
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:412 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 1971, 'testing.postgresql-1': 1972, 'testing.postgresql-2': 1972}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 2133, 'testing.postgresql-1': 2133, 'testing.postgresql-2': 2134}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:416 Get leader unit
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:419 promoting the first cluster
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: Primary
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] maintenance: Creating replication...
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] maintenance: Creating replication...
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] waiting: Waiting for the database to be stopped in all units
  postgresql/1 [executing] active: 
  postgresql/2 [idle] waiting: Waiting for the database to be stopped in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/1 [idle] waiting: awaiting for member to start
  postgresql/2 [idle] waiting: awaiting for member to start
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] waiting: Waiting for the database to be stopped in all units
  postgresql/1 [executing] waiting: Waiting for the standby leader start the database
  postgresql/2 [executing] waiting: Still starting the database in the standby leader
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary (degraded)
  postgresql/1 [executing] active: 
  postgresql/2 [executing] waiting: awaiting for member to start
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] waiting: Waiting for the database to be stopped in all units
  postgresql/1 [executing] waiting: Waiting for the database to start
  postgresql/2 [executing] waiting: Still starting the database in the standby leader
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: Primary
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: 
  postgresql/1 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:436 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 30271, 'testing.postgresql-1': 30272, 'testing.postgresql-2': 30273}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 30434, 'testing.postgresql-1': 30435, 'testing.postgresql-2': 30436}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:441 checking whether no writes were lost