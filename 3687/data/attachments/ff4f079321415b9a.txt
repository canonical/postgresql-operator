[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:461 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:464 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'test.postgresql-1': 177, 'test.postgresql-2': 177}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'test.postgresql-1': 310, 'test.postgresql-2': 311}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:468 Sync-standby: postgresql-1
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:469 deleting the sync-standby
[32mINFO    [0m juju.model:model.py:3211 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: Standby
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:model.py:3211 Waiting for model:
  postgresql (waiting for exactly 2 units, current : 3)
[32mINFO    [0m juju.model:model.py:3211 Waiting for model:
  postgresql (waiting for exactly 2 units, current : 3)
[32mINFO    [0m juju.model:model.py:3211 Waiting for model:
  postgresql/0 [idle] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:488 New sync-standby: postgresql-0
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:491 Ensure continuous_writes after the crashed unit
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'test.postgresql-0': 3509, 'test.postgresql-2': 3509}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'test.postgresql-0': 3654, 'test.postgresql-2': 3654}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:496 checking whether no writes were lost