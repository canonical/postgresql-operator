[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:459 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:462 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 2, 'testing.postgresql-1': 2, 'testing.postgresql-2': 2}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 4, 'testing.postgresql-1': 4, 'testing.postgresql-2': 4}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:466 Sync-standby: postgresql-1
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:467 deleting the sync-standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: Standby
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql (waiting for exactly 2 units, current : 3)
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql (waiting for exactly 2 units, current : 3)
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:486 New sync-standby: postgresql-2
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:489 Ensure continuous_writes after the crashed unit
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 66, 'testing.postgresql-2': 66}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 68, 'testing.postgresql-2': 68}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:494 checking whether no writes were lost