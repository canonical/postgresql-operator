"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Test superuser actions and the request for more permissions.","","test_user_with_extra_roles","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_fail_and_rollback","tests.integration.ha_tests","","unknown","","","test_upgrade","",""
"Remove unit with force while storage is alive.","1198268","test_app_force_removal","tests.integration.ha_tests","2025-10-28","passed","2025-10-28","","test_smoke","",""
"Test that's possible to change PostgreSQL parameters.","0","test_postgresql_parameters_change","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","0","test_settings_are_correct[0]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"Deploy Landscape Scalable Bundle to test the 'db-admin' relation.","","test_landscape_scalable_bundle_db","tests.integration","","unknown","","","test_db_admin","",""
"","0","test_exporter_is_up[1]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","0","test_database_is_up[2]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","","test_removing_unit[roles0]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units_async","",""
"","0","test_exporter_is_up[2]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"Build and deploy two PostgreSQL clusters.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_scaling_three_units","",""
"","","test_removing_stereo_primary","tests.integration.ha_tests","","unknown","","","test_scaling","",""
"Checks if charm gets blocked when trying to disable a plugin in use.","","test_plugin_objects","tests.integration","","unknown","","","test_plugins","",""
"Check that writes in one cluster are not replicated to another cluster.","","test_no_data_replicated_between_clusters","tests.integration.ha_tests","","unknown","","","test_replication","",""
"","","test_removing_unit[roles1]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units","",""
"","","test_scale_to_five_units","tests.integration.ha_tests","","unknown","","","test_scaling","",""
"Build and deploy two PostgreSQL clusters.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_scaling","",""
"Completely cut and restore network.","","test_network_cut","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_get_data_integrator_credentials","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"","0","test_canonical_livepatch_onprem_bundle_db","tests.integration","2025-10-28","skipped","2025-10-28","","test_db","",""
"Test that there is no read-only endpoint in a standalone cluster.","","test_primary_read_only_endpoint_in_standalone_cluster","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_scale_down","tests.integration","","unknown","","","test_subordinates","",""
"Test that TLS is enabled when relating to the TLS Certificates Operator.","1502537","test_tls_enabled","tests.integration","2025-10-28","broken","2025-10-28","","test_tls","",""
"","0","test_extensions_blocking","tests.integration","2025-10-28","skipped","2025-10-28","","test_db","",""
"","0","test_default_all","tests.integration.ha_tests","2025-10-28","skipped","2025-10-28","","test_synchronous_policy","",""
"Simple test to ensure that the PostgreSQL and application charms get deployed.","","test_deploy_latest","tests.integration.ha_tests","","unknown","","","test_upgrade","",""
"Test updating from stable channel.","0","test_upgrade_from_stable","tests.integration.ha_tests","2025-10-28","skipped","2025-10-28","","test_upgrade_from_stable","",""
"Test that in general, there is no change when password validation fails.","0","test_no_password_change_on_invalid_password","tests.integration","2025-10-28","skipped","2025-10-28","","test_password_rotation","",""
"Test that there is read-only endpoint in a scaled up cluster.","","test_read_only_endpoint_in_scaled_up_cluster","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"Test that async replication works when scaling the clusters.","","test_scaling","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"Build and deploy one unit of PostgreSQL and then test config with wrong parameters.","","test_config_parameters","tests.integration","","unknown","","","test_config","",""
"Test that the charm can handle invalid and valid backup configurations.","","test_invalid_config_and_recovery_after_fixing_it","tests.integration","","unknown","","","test_backups_gcp","",""
"Test that the pre-upgrade-check action runs successfully.","0","test_pre_upgrade_check","tests.integration.ha_tests","2025-10-28","skipped","2025-10-28","","test_upgrade_from_stable","",""
"Test application deploy in dirty environment with garbage storage from another application.","0","test_app_resources_conflicts_v2","tests.integration.ha_tests","2025-10-28","skipped","2025-10-28","","test_smoke","",""
"Checking if password is same as returned by CLI.

    I.e. we're manipulating the secret we think we're manipulating.
    ","0","test_password_from_secret_same_as_cli","tests.integration","2025-10-28","skipped","2025-10-28","","test_password_rotation","",""
"","0","test_exporter_is_up[0]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","0","test_roles_blocking","tests.integration","2025-10-28","skipped","2025-10-28","","test_db","",""
"Deploy both charms (application and database) to use in the tests.","","test_deploy_charms","tests.integration.relations","","unknown","","","test_relations","",""
"","","test_data_integrator_creds_keep_on_working","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"","","test_freeze_db_process[postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_scale_up","tests.integration","","unknown","","","test_subordinates","",""
"Test that passwords don't get exposed on postgresql logs.","0","test_no_password_exposed_on_logs","tests.integration","2025-10-28","skipped","2025-10-28","","test_password_rotation","",""
"Test that the password can't be set to an empty string.","0","test_empty_password","tests.integration","2025-10-28","skipped","2025-10-28","","test_password_rotation","",""
"Test that an application can connect to different clusters of the same database.","","test_an_application_can_connect_to_multiple_aliased_database_clusters","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","0","test_constant","tests.integration.ha_tests","2025-10-28","skipped","2025-10-28","","test_synchronous_policy","",""
"Test that the admin role gives access to all the databases.","","test_admin_role","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"Build, deploy two units of PostgreSQL and do backup in GCP. Then, write new data into DB, switch WAL file and test point-in-time-recovery restore action.","1012753","test_pitr_backup_gcp","tests.integration","2025-10-28","broken","2025-10-28","","test_backups_pitr_gcp","",""
"","","test_removing_unit[roles3]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units","",""
"Test that is possible to restore a backup to another PostgreSQL cluster.","","test_restore_on_new_cluster","tests.integration","","unknown","","","test_backups_gcp","",""
"Build the charm and deploy it.","6190","test_deploy_active","tests.integration","2025-10-28","passed","2025-10-28","","test_tls","",""
"","","test_removing_unit[roles4]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units_async","",""
"Build and deploy two PostgreSQL clusters.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_restore_cluster","",""
"Test password rotation action.","0","test_password_rotation","tests.integration","2025-10-28","skipped","2025-10-28","","test_password_rotation","",""
"Test that an application can connect to different clusters of the same database.","","test_an_application_can_connect_to_multiple_database_clusters","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"Kill primary unit, check reelection.","","test_reelection","tests.integration.ha_tests","","unknown","","","test_replication","",""
"Test switching over to the second cluster.","","test_switchover","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"Test that relation data, like connection data, is updated correctly when scaling.","","test_relation_data_is_updated_correctly_when_scaling","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_legacy_endpoint_with_multiple_related_endpoints","tests.integration.relations","","unknown","","","test_relations","",""
"Test that async replication fails over correctly.","","test_async_replication_failover_in_main_cluster","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"","0","test_postgresql_locales","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","","test_modern_endpoint_with_multiple_related_endpoints","tests.integration.relations","","unknown","","","test_relations","",""
"Build and deploy two units of PostgreSQL in microceph, test backup and restore actions.","1011566","test_backup_ceph","tests.integration","2025-10-28","broken","2025-10-28","","test_backups_ceph","",""
"","","test_interruption_db_process[SIGKILL-postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_upgrade_from_edge","tests.integration.ha_tests","","unknown","","","test_upgrade","",""
"Test that an application can request additional databases using the same interface.","","test_an_application_can_request_multiple_databases","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"Test that a relation with no database name doesn't block the charm.","","test_relation_with_no_database_name","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_nextcloud_db_blocked","tests.integration.new_relations","","unknown","","","test_new_relations_2","",""
"","","test_removing_unit[roles3]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units_async","",""
"Test application deploy in dirty environment with garbage storage from another application.","1011341","test_app_resources_conflicts_v3","tests.integration.ha_tests","2025-10-28","passed","2025-10-28","","test_smoke","",""
"Deploy Mailman3 Core to test the 'db' relation.","1506174","test_mailman3_core_db","tests.integration","2025-10-28","broken","2025-10-28","","test_db","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGKILL-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Completely cut and restore network (situation when the unit IP doesn't change).","","test_network_cut_without_ip_change","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","0","test_switchover_sync_standby","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"Build and deploy three unit of PostgreSQL.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_replication","",""
"Test data is replicated to new units after a scale up.","0","test_scale_down_and_up","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","0","test_settings_are_correct[2]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"Build the charm and deploy it.","1506246","test_deploy_active","tests.integration","2025-10-28","broken","2025-10-28","","test_password_rotation","",""
"Deploy the charm-under-test.

    Assert on the unit status before any relations/configurations take place.
    ","1506816","test_deploy","tests.integration","2025-10-28","broken","2025-10-28","","test_charm","",""
"","","test_interruption_db_process[SIGTERM-postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGKILL-postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Test promoting the standby cluster.","","test_promote_standby","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"","0","test_settings_are_correct[1]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"","","test_removing_stereo_sync_standby","tests.integration.ha_tests","","unknown","","","test_scaling","",""
"Test that the relation can be broken and re-established.","","test_reestablish_relation","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"","","test_removing_unit[roles2]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units_async","",""
"","0","test_majority","tests.integration.ha_tests","2025-10-28","skipped","2025-10-28","","test_synchronous_policy","",""
"","","test_removing_unit[roles1]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units_async","",""
"","","test_invalid_extra_user_roles","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_removing_unit[roles0]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units","",""
"Test charm deploy in dirty environment with garbage storage.","469326","test_charm_garbage_ignorance","tests.integration.ha_tests","2025-10-28","passed","2025-10-28","","test_smoke","",""
"Test that check relation data.","1505871","test_relations","tests.integration.new_relations","2025-10-28","broken","2025-10-28","","test_relations_coherence","",""
"","0","test_database_is_up[1]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"Verifies that database units with attached storage correctly repurpose storage.

    It is not enough to verify that Juju attaches the storage. Hence test checks that the
    postgresql properly uses the storage that was provided. (ie. doesn't just re-sync everything
    from primary, but instead computes a diff between current storage and primary storage.)
    ","","test_storage_re_use","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_freeze_db_process[/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Test that async replication fails back correctly.","","test_async_replication_failover_in_secondary_cluster","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"Test that user can't connect with empty password.","0","test_db_connection_with_empty_password","tests.integration","2025-10-28","skipped","2025-10-28","","test_password_rotation","",""
"","","test_removing_unit[roles2]","tests.integration.ha_tests","","unknown","","","test_scaling_three_units","",""
"A forceful restart with deleted data and without transaction logs (forced clone).","","test_forceful_restart_without_data_and_transaction_logs","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Build and deploy two PostgreSQL cluster in two separate models to test async replication.","","test_deploy_async_replication_setup","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"Recreates the cluster from storage volumes.","","test_cluster_restore","tests.integration.ha_tests","","unknown","","","test_restore_cluster","",""
"Build and deploy two units of PostgreSQL in AWS, test backup and restore actions.","1011179","test_backup_aws","tests.integration","2025-10-28","broken","2025-10-28","","test_backups_aws","",""
"Write to primary, read data from secondaries (check consistency).","","test_consistency","tests.integration.ha_tests","","unknown","","","test_replication","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGTERM-postgres]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"","","test_block_on_missing_region","tests.integration","","unknown","","","test_backups_gcp","",""
"Test the audit plugin.","606713","test_audit_plugin","tests.integration","2025-10-28","broken","2025-10-28","","test_audit","",""
"Simple test to ensure that the PostgreSQL and application charms get deployed.","1206509","test_deploy_stable","tests.integration.ha_tests","2025-10-28","broken","2025-10-28","","test_upgrade_from_stable","",""
"","","test_removing_raft_majority","tests.integration.ha_tests","","unknown","","","test_scaling","",""
"Test that relation data, like connection data, is updated correctly when scaling.","0","test_relation_data_is_updated_correctly_when_scaling","tests.integration","2025-10-28","skipped","2025-10-28","","test_db","",""
"Test basic functionality of database relation interface.","","test_database_relation_with_charm_libraries","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_deploy","tests.integration","","unknown","","","test_subordinates","",""
"","","test_pg_hba","tests.integration","","unknown","","","test_pg_hba","",""
"","0","test_database_is_up[0]","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
"This tests checks that a cluster recovers from a full cluster restart.

    The test can be called a full cluster crash when the signal sent to the OS process
    is SIGKILL.
    ","","test_full_cluster_restart[SIGTERM-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Test async replication between two PostgreSQL clusters.","","test_async_replication","tests.integration.ha_tests","","unknown","","","test_async_replication","",""
"","","test_interruption_db_process[SIGTERM-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Build and deploy three unit of PostgreSQL.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Build and deploy two PostgreSQL clusters.","1506861","test_build_and_deploy","tests.integration.ha_tests","2025-10-28","broken","2025-10-28","","test_synchronous_policy","",""
"Test that the pre-upgrade-check action runs successfully.","","test_pre_upgrade_check","tests.integration.ha_tests","","unknown","","","test_upgrade","",""
"Build and deploy one unit of PostgreSQL and then test the available plugins.","","test_plugins","tests.integration","","unknown","","","test_plugins","",""
"","","test_interruption_db_process[SIGKILL-/snap/charmed-postgresql/[0-9]*/usr/bin/patroni]","tests.integration.ha_tests","","unknown","","","test_self_healing","",""
"Deploy both charms (application and database) to use in the tests.","","test_deploy_charms","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"","","test_filter_out_degraded_replicas","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"Build and deploy two PostgreSQL clusters.","","test_build_and_deploy","tests.integration.ha_tests","","unknown","","","test_scaling_three_units_async","",""
"Build and deploy two units of PostgreSQL in GCP, test backup and restore actions.","","test_backup_gcp","tests.integration","","unknown","","","test_backups_gcp","",""
"Build, deploy two units of PostgreSQL and do backup in AWS. Then, write new data into DB, switch WAL file and test point-in-time-recovery restore action.","1012663","test_pitr_backup_aws","tests.integration","2025-10-28","broken","2025-10-28","","test_backups_pitr_aws","",""
"Test that two different application connect to the database with different credentials.","","test_two_applications_doesnt_share_the_same_relation_data","tests.integration.new_relations","","unknown","","","test_new_relations_1","",""
"Test data persists through a primary deletion.","0","test_persist_data_through_primary_deletion","tests.integration","2025-10-28","skipped","2025-10-28","","test_charm","",""
