[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:163 starting continuous writes to the database
[33mWARNING [0m juju.model:__init__.py:1683 relate is deprecated and will be removed. Use integrate instead.
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
  data-integrator/0 [idle] active: 
  postgresql-test-app/0 [executing] blocked: No database integration available
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
  postgresql-test-app/0 [idle] blocked: No database integration available
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
  postgresql-test-app/0 [idle] blocked: No database integration available
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
  postgresql-test-app/0 [idle] blocked: No database integration available
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql-test-app/0 [idle] blocked: No database integration available
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql-test-app/0 [idle] blocked: No database integration available
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
  postgresql-test-app/0 [idle] active: received database credentials of the first database
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:166 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 2, 'testing.postgresql-1': 2, 'testing.postgresql-2': 2}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 3, 'testing.postgresql-1': 3, 'testing.postgresql-2': 3}
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: 
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: Primary
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[33mWARNING [0m juju.model:__init__.py:1683 relate is deprecated and will be removed. Use integrate instead.
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: 
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: Primary
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [idle] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: Primary
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:198 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 56, 'testing.postgresql-1': 56, 'testing.postgresql-2': 56}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 58, 'testing.postgresql-1': 58, 'testing.postgresql-2': 58}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:202 Get leader unit
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:205 promoting the first cluster
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: Primary
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] maintenance: Creating replication...
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] waiting: Waiting for the standby leader start the database
  postgresql/1 [executing] waiting: Waiting for the standby leader start the database
  postgresql/2 [idle] waiting: Still starting the database in the standby leader
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [executing] maintenance: reinitialising replica
  postgresql/2 [executing] maintenance: reinitialising replica
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] waiting: Waiting for the standby leader start the database
  postgresql/1 [executing] waiting: Waiting for the standby leader start the database
  postgresql/2 [executing] waiting: Still starting the database in the standby leader
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary (degraded)
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/1 [idle] active: 
  postgresql/2 [executing] waiting: Still starting the database in the standby leader
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: Primary
  postgresql/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] waiting: Waiting for the database to be started in all units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [executing] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:222 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 502, 'testing.postgresql-1': 502, 'testing.postgresql-2': 502}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 504, 'testing.postgresql-1': 504, 'testing.postgresql-2': 504}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:227 checking whether no writes were lost