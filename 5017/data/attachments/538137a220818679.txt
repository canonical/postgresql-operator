[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:455 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:458 checking whether writes are increasing
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-0': 2, 'testing.postgresql-1': 2, 'testing.postgresql-2': 2}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-0': 3, 'testing.postgresql-1': 4, 'testing.postgresql-2': 4}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:462 Sync-standby: postgresql-0
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:463 deleting the sync-standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/0 [executing] active: 
  postgresql/1 [executing] active: 
  postgresql/2 [idle] active: Standby
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql (waiting for exactly 2 units, current : 3)
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql/1 [idle] active: 
  postgresql/2 [idle] active: Primary
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:482 New sync-standby: postgresql-1
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:485 Ensure continuous_writes after the crashed unit
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:103 Initial writes {'testing.postgresql-1': 34, 'testing.postgresql-2': 34}
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:113 Retry writes {'testing.postgresql-1': 36, 'testing.postgresql-2': 36}
[32mINFO    [0m integration.ha_tests.test_async_replication:test_async_replication.py:490 checking whether no writes were lost